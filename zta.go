// mksyscall_dll ta.go
// MACHINE GENERATED BY THE COMMAND ABOVE; DO NOT EDIT

package talib

import (
	"syscall"
	"unsafe"
)

var (
	modtalib = syscall.NewLazyDLL("talib.dll")

	procZ_Initialize = modtalib.NewProc("Z_Initialize")
	procZ_Shutdown = modtalib.NewProc("Z_Shutdown")
	procZ_Acos = modtalib.NewProc("Z_Acos")
	procZ_Ad = modtalib.NewProc("Z_Ad")
	procZ_Add = modtalib.NewProc("Z_Add")
	procZ_AdOsc = modtalib.NewProc("Z_AdOsc")
	procZ_Adx = modtalib.NewProc("Z_Adx")
	procZ_Adxr = modtalib.NewProc("Z_Adxr")
	procZ_Apo = modtalib.NewProc("Z_Apo")
	procZ_AroOn = modtalib.NewProc("Z_AroOn")
	procZ_AroOnOsc = modtalib.NewProc("Z_AroOnOsc")
	procZ_AsIn = modtalib.NewProc("Z_AsIn")
	procZ_Atan = modtalib.NewProc("Z_Atan")
	procZ_Atr = modtalib.NewProc("Z_Atr")
	procZ_AvgPrice = modtalib.NewProc("Z_AvgPrice")
	procZ_BBands = modtalib.NewProc("Z_BBands")
	procZ_Beta = modtalib.NewProc("Z_Beta")
	procZ_Bop = modtalib.NewProc("Z_Bop")
	procZ_Cci = modtalib.NewProc("Z_Cci")
	procZ_Cdl2Crows = modtalib.NewProc("Z_Cdl2Crows")
	procZ_Cdl3BlackCrows = modtalib.NewProc("Z_Cdl3BlackCrows")
	procZ_Cdl3InSide = modtalib.NewProc("Z_Cdl3InSide")
	procZ_Cdl3LIneStrike = modtalib.NewProc("Z_Cdl3LIneStrike")
	procZ_Cdl3OutSide = modtalib.NewProc("Z_Cdl3OutSide")
	procZ_Cdl3StarsInSouth = modtalib.NewProc("Z_Cdl3StarsInSouth")
	procZ_Cdl3WhiteSoldiers = modtalib.NewProc("Z_Cdl3WhiteSoldiers")
	procZ_CdlAbandOnedBaBy = modtalib.NewProc("Z_CdlAbandOnedBaBy")
	procZ_CdlAdvanceBlock = modtalib.NewProc("Z_CdlAdvanceBlock")
	procZ_CdlBeltHold = modtalib.NewProc("Z_CdlBeltHold")
	procZ_CdlBreakaway = modtalib.NewProc("Z_CdlBreakaway")
	procZ_CdlclosIngMarubozu = modtalib.NewProc("Z_CdlclosIngMarubozu")
	procZ_CdlCOncealBaBySwall = modtalib.NewProc("Z_CdlCOncealBaBySwall")
	procZ_CdlCounterattack = modtalib.NewProc("Z_CdlCounterattack")
	procZ_CdlDarkCloudCover = modtalib.NewProc("Z_CdlDarkCloudCover")
	procZ_CdlDoji = modtalib.NewProc("Z_CdlDoji")
	procZ_CdlDojiStar = modtalib.NewProc("Z_CdlDojiStar")
	procZ_CdlDragOnflyDoji = modtalib.NewProc("Z_CdlDragOnflyDoji")
	procZ_CdlengulfIng = modtalib.NewProc("Z_CdlengulfIng")
	procZ_CdlevenIngDojiStar = modtalib.NewProc("Z_CdlevenIngDojiStar")
	procZ_CdlevenIngStar = modtalib.NewProc("Z_CdlevenIngStar")
	procZ_CdlGapSidesideWhite = modtalib.NewProc("Z_CdlGapSidesideWhite")
	procZ_CdlGravestOneDoji = modtalib.NewProc("Z_CdlGravestOneDoji")
	procZ_CdlHammer = modtalib.NewProc("Z_CdlHammer")
	procZ_CdlhangIngMan = modtalib.NewProc("Z_CdlhangIngMan")
	procZ_CdlHarami = modtalib.NewProc("Z_CdlHarami")
	procZ_CdlHaramiCross = modtalib.NewProc("Z_CdlHaramiCross")
	procZ_CdlHighWave = modtalib.NewProc("Z_CdlHighWave")
	procZ_CdlHikkake = modtalib.NewProc("Z_CdlHikkake")
	procZ_CdlHikkakeMod = modtalib.NewProc("Z_CdlHikkakeMod")
	procZ_CdlhomIngPigeOn = modtalib.NewProc("Z_CdlhomIngPigeOn")
	procZ_CdlIdentical3Crows = modtalib.NewProc("Z_CdlIdentical3Crows")
	procZ_CdlInNeck = modtalib.NewProc("Z_CdlInNeck")
	procZ_CdlInvertedHammer = modtalib.NewProc("Z_CdlInvertedHammer")
	procZ_CdlkickIng = modtalib.NewProc("Z_CdlkickIng")
	procZ_CdlkickIngByLength = modtalib.NewProc("Z_CdlkickIngByLength")
	procZ_CdlLadderBottom = modtalib.NewProc("Z_CdlLadderBottom")
	procZ_CdlLOngLeggedDoji = modtalib.NewProc("Z_CdlLOngLeggedDoji")
	procZ_CdlLOngLIne = modtalib.NewProc("Z_CdlLOngLIne")
	procZ_CdlMarubozu = modtalib.NewProc("Z_CdlMarubozu")
	procZ_CdlMatchIngLow = modtalib.NewProc("Z_CdlMatchIngLow")
	procZ_CdlMatHold = modtalib.NewProc("Z_CdlMatHold")
	procZ_CdlmornIngDojiStar = modtalib.NewProc("Z_CdlmornIngDojiStar")
	procZ_CdlmornIngStar = modtalib.NewProc("Z_CdlmornIngStar")
	procZ_CdlOnNeck = modtalib.NewProc("Z_CdlOnNeck")
	procZ_CdlpiercIng = modtalib.NewProc("Z_CdlpiercIng")
	procZ_CdlRickshawMan = modtalib.NewProc("Z_CdlRickshawMan")
	procZ_CdlRiseFall3Methods = modtalib.NewProc("Z_CdlRiseFall3Methods")
	procZ_CdlseparatIngLines = modtalib.NewProc("Z_CdlseparatIngLines")
	procZ_CdlshootIngStar = modtalib.NewProc("Z_CdlshootIngStar")
	procZ_CdlShortLIne = modtalib.NewProc("Z_CdlShortLIne")
	procZ_CdlspInningTop = modtalib.NewProc("Z_CdlspInningTop")
	procZ_CdlStalledPattern = modtalib.NewProc("Z_CdlStalledPattern")
	procZ_CdlStickSandwich = modtalib.NewProc("Z_CdlStickSandwich")
	procZ_CdlTakuri = modtalib.NewProc("Z_CdlTakuri")
	procZ_CdlTasukiGap = modtalib.NewProc("Z_CdlTasukiGap")
	procZ_CdlthrustIng = modtalib.NewProc("Z_CdlthrustIng")
	procZ_CdltriStar = modtalib.NewProc("Z_CdltriStar")
	procZ_CdlUnique3River = modtalib.NewProc("Z_CdlUnique3River")
	procZ_CdlupSideGap2Crows = modtalib.NewProc("Z_CdlupSideGap2Crows")
	procZ_CdlxSideGap3Methods = modtalib.NewProc("Z_CdlxSideGap3Methods")
	procZ_Ceil = modtalib.NewProc("Z_Ceil")
	procZ_Cmo = modtalib.NewProc("Z_Cmo")
	procZ_Correl = modtalib.NewProc("Z_Correl")
	procZ_Cos = modtalib.NewProc("Z_Cos")
	procZ_Cosh = modtalib.NewProc("Z_Cosh")
	procZ_Dema = modtalib.NewProc("Z_Dema")
	procZ_Div = modtalib.NewProc("Z_Div")
	procZ_Dx = modtalib.NewProc("Z_Dx")
	procZ_Ema = modtalib.NewProc("Z_Ema")
	procZ_Exp = modtalib.NewProc("Z_Exp")
	procZ_Floor = modtalib.NewProc("Z_Floor")
	procZ_HtDcPeriod = modtalib.NewProc("Z_HtDcPeriod")
	procZ_HtDcPhase = modtalib.NewProc("Z_HtDcPhase")
	procZ_HtPhasor = modtalib.NewProc("Z_HtPhasor")
	procZ_HtSIne = modtalib.NewProc("Z_HtSIne")
	procZ_HtTrendLIne = modtalib.NewProc("Z_HtTrendLIne")
	procZ_HtTrendMode = modtalib.NewProc("Z_HtTrendMode")
	procZ_Kama = modtalib.NewProc("Z_Kama")
	procZ_LInearReg = modtalib.NewProc("Z_LInearReg")
	procZ_LInearRegAngle = modtalib.NewProc("Z_LInearRegAngle")
	procZ_LInearRegIntercept = modtalib.NewProc("Z_LInearRegIntercept")
	procZ_LInearRegSlope = modtalib.NewProc("Z_LInearRegSlope")
	procZ_Ln = modtalib.NewProc("Z_Ln")
	procZ_Log10 = modtalib.NewProc("Z_Log10")
	procZ_Ma = modtalib.NewProc("Z_Ma")
	procZ_Macd = modtalib.NewProc("Z_Macd")
	procZ_MacdExt = modtalib.NewProc("Z_MacdExt")
	procZ_MacdFix = modtalib.NewProc("Z_MacdFix")
	procZ_Mama = modtalib.NewProc("Z_Mama")
	procZ_Mavp = modtalib.NewProc("Z_Mavp")
	procZ_Max = modtalib.NewProc("Z_Max")
	procZ_Max_Lookback = modtalib.NewProc("Z_Max_Lookback")
	procZ_MaxIndex = modtalib.NewProc("Z_MaxIndex")
	procZ_MedPrice = modtalib.NewProc("Z_MedPrice")
	procZ_Mfi = modtalib.NewProc("Z_Mfi")
	procZ_MidpoInt = modtalib.NewProc("Z_MidpoInt")
	procZ_MidPrice = modtalib.NewProc("Z_MidPrice")
	procZ_MIn = modtalib.NewProc("Z_MIn")
	procZ_MInIndex = modtalib.NewProc("Z_MInIndex")
	procZ_MInMax = modtalib.NewProc("Z_MInMax")
	procZ_MInMaxIndex = modtalib.NewProc("Z_MInMaxIndex")
	procZ_MInusDi = modtalib.NewProc("Z_MInusDi")
	procZ_MInusDm = modtalib.NewProc("Z_MInusDm")
	procZ_Mom = modtalib.NewProc("Z_Mom")
	procZ_Mult = modtalib.NewProc("Z_Mult")
	procZ_Natr = modtalib.NewProc("Z_Natr")
	procZ_Obv = modtalib.NewProc("Z_Obv")
	procZ_PlusDi = modtalib.NewProc("Z_PlusDi")
	procZ_PlusDm = modtalib.NewProc("Z_PlusDm")
	procZ_Ppo = modtalib.NewProc("Z_Ppo")
	procZ_Roc = modtalib.NewProc("Z_Roc")
	procZ_Rocp = modtalib.NewProc("Z_Rocp")
	procZ_Rocr = modtalib.NewProc("Z_Rocr")
	procZ_Rocr100 = modtalib.NewProc("Z_Rocr100")
	procZ_Rsi = modtalib.NewProc("Z_Rsi")
	procZ_Sar = modtalib.NewProc("Z_Sar")
	procZ_SarExt = modtalib.NewProc("Z_SarExt")
	procZ_SIn = modtalib.NewProc("Z_SIn")
	procZ_SInh = modtalib.NewProc("Z_SInh")
	procZ_Sma = modtalib.NewProc("Z_Sma")
	procZ_Sqrt = modtalib.NewProc("Z_Sqrt")
	procZ_StdDev = modtalib.NewProc("Z_StdDev")
	procZ_Stoch = modtalib.NewProc("Z_Stoch")
	procZ_Stochf = modtalib.NewProc("Z_Stochf")
	procZ_StochRsi = modtalib.NewProc("Z_StochRsi")
	procZ_Sub = modtalib.NewProc("Z_Sub")
	procZ_Sum = modtalib.NewProc("Z_Sum")
	procZ_T3 = modtalib.NewProc("Z_T3")
	procZ_Tan = modtalib.NewProc("Z_Tan")
	procZ_Tanh = modtalib.NewProc("Z_Tanh")
	procZ_Tema = modtalib.NewProc("Z_Tema")
	procZ_Trange = modtalib.NewProc("Z_Trange")
	procZ_Trima = modtalib.NewProc("Z_Trima")
	procZ_Trix = modtalib.NewProc("Z_Trix")
	procZ_Tsf = modtalib.NewProc("Z_Tsf")
	procZ_TypPrice = modtalib.NewProc("Z_TypPrice")
	procZ_UltOsc = modtalib.NewProc("Z_UltOsc")
	procZ_Var = modtalib.NewProc("Z_Var")
	procZ_WclPrice = modtalib.NewProc("Z_WclPrice")
	procZ_Willr = modtalib.NewProc("Z_Willr")
	procZ_Wma = modtalib.NewProc("Z_Wma")
)

func ta_Initialize() (retCode int, err error) {
	r0, _, e1 := syscall.Syscall(procZ_Initialize.Addr(), 0, 0, 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Shutdown() (retCode int, err error) {
	r0, _, e1 := syscall.Syscall(procZ_Shutdown.Addr(), 0, 0, 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Acos(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Acos.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ad(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, inVolume *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Ad.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(inVolume)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Add(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Add.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_AdOsc(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, inVolume *float64, optInFastPeriod int, optInSlowPeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_AdOsc.Addr(), 11, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(inVolume)), uintptr(optInFastPeriod), uintptr(optInSlowPeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Adx(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Adx.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Adxr(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Adxr.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Apo(startIdx int, endIdx int, inReal *float64, optInFastPeriod int, optInSlowPeriod int, optInMAType int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Apo.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInFastPeriod), uintptr(optInSlowPeriod), uintptr(optInMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_AroOn(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outAroonDown *float64, outAroonUp *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_AroOn.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outAroonDown)), uintptr(unsafe.Pointer(outAroonUp)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_AroOnOsc(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_AroOnOsc.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_AsIn(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_AsIn.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Atan(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Atan.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Atr(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Atr.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_AvgPrice(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_AvgPrice.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_BBands(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInNbDevUp float64, optInNbDevDn float64, optInMAType int, outBegIdx *int, outNBElement *int, outRealUpperBand *float64, outRealMiddleBand *float64, outRealLowerBand *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_BBands.Addr(), 12, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInNbDevUp), uintptr(optInNbDevDn), uintptr(optInMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outRealUpperBand)), uintptr(unsafe.Pointer(outRealMiddleBand)), uintptr(unsafe.Pointer(outRealLowerBand)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Beta(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Beta.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Bop(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Bop.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cci(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cci.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl2Crows(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl2Crows.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3BlackCrows(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3BlackCrows.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3InSide(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3InSide.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3LIneStrike(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3LIneStrike.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3OutSide(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3OutSide.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3StarsInSouth(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3StarsInSouth.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cdl3WhiteSoldiers(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cdl3WhiteSoldiers.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlAbandOnedBaBy(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlAbandOnedBaBy.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlAdvanceBlock(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlAdvanceBlock.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlBeltHold(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlBeltHold.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlBreakaway(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlBreakaway.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlclosIngMarubozu(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlclosIngMarubozu.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlCOncealBaBySwall(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlCOncealBaBySwall.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlCounterattack(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlCounterattack.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlDarkCloudCover(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlDarkCloudCover.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlDoji(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlDoji.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlDojiStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlDojiStar.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlDragOnflyDoji(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlDragOnflyDoji.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlengulfIng(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlengulfIng.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlevenIngDojiStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlevenIngDojiStar.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlevenIngStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlevenIngStar.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlGapSidesideWhite(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlGapSidesideWhite.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlGravestOneDoji(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlGravestOneDoji.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHammer(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHammer.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlhangIngMan(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlhangIngMan.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHarami(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHarami.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHaramiCross(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHaramiCross.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHighWave(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHighWave.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHikkake(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHikkake.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlHikkakeMod(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlHikkakeMod.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlhomIngPigeOn(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlhomIngPigeOn.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlIdentical3Crows(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlIdentical3Crows.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlInNeck(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlInNeck.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlInvertedHammer(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlInvertedHammer.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlkickIng(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlkickIng.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlkickIngByLength(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlkickIngByLength.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlLadderBottom(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlLadderBottom.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlLOngLeggedDoji(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlLOngLeggedDoji.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlLOngLIne(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlLOngLIne.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlMarubozu(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlMarubozu.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlMatchIngLow(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlMatchIngLow.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlMatHold(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlMatHold.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlmornIngDojiStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlmornIngDojiStar.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlmornIngStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, optInPenetration float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_CdlmornIngStar.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInPenetration), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlOnNeck(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlOnNeck.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlpiercIng(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlpiercIng.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlRickshawMan(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlRickshawMan.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlRiseFall3Methods(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlRiseFall3Methods.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlseparatIngLines(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlseparatIngLines.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlshootIngStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlshootIngStar.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlShortLIne(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlShortLIne.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlspInningTop(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlspInningTop.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlStalledPattern(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlStalledPattern.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlStickSandwich(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlStickSandwich.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlTakuri(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlTakuri.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlTasukiGap(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlTasukiGap.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlthrustIng(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlthrustIng.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdltriStar(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdltriStar.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlUnique3River(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlUnique3River.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlupSideGap2Crows(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlupSideGap2Crows.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_CdlxSideGap3Methods(startIdx int, endIdx int, inOpen *float64, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_CdlxSideGap3Methods.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inOpen)), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ceil(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Ceil.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cmo(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Cmo.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Correl(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Correl.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cos(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Cos.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Cosh(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Cosh.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Dema(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Dema.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Div(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Div.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Dx(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Dx.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ema(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Ema.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Exp(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Exp.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Floor(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Floor.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtDcPeriod(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_HtDcPeriod.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtDcPhase(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_HtDcPhase.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtPhasor(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outInPhase *float64, outQuadrature *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_HtPhasor.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInPhase)), uintptr(unsafe.Pointer(outQuadrature)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtSIne(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outSine *float64, outLeadSine *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_HtSIne.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outSine)), uintptr(unsafe.Pointer(outLeadSine)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtTrendLIne(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_HtTrendLIne.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_HtTrendMode(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_HtTrendMode.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Kama(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Kama.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_LInearReg(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_LInearReg.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_LInearRegAngle(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_LInearRegAngle.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_LInearRegIntercept(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_LInearRegIntercept.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_LInearRegSlope(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_LInearRegSlope.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ln(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Ln.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Log10(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Log10.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ma(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInMAType int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Ma.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Macd(startIdx int, endIdx int, inReal *float64, optInFastPeriod int, optInSlowPeriod int, optInSignalPeriod int, outBegIdx *int, outNBElement *int, outMACD *float64, outMACDSignal *float64, outMACDHist *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_Macd.Addr(), 11, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInFastPeriod), uintptr(optInSlowPeriod), uintptr(optInSignalPeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMACD)), uintptr(unsafe.Pointer(outMACDSignal)), uintptr(unsafe.Pointer(outMACDHist)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MacdExt(startIdx int, endIdx int, inReal *float64, optInFastPeriod int, optInFastMAType int, optInSlowPeriod int, optInSlowMAType int, optInSignalPeriod int, optInSignalMAType int, outBegIdx *int, outNBElement *int, outMACD *float64, outMACDSignal *float64, outMACDHist *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall15(procZ_MacdExt.Addr(), 14, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInFastPeriod), uintptr(optInFastMAType), uintptr(optInSlowPeriod), uintptr(optInSlowMAType), uintptr(optInSignalPeriod), uintptr(optInSignalMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMACD)), uintptr(unsafe.Pointer(outMACDSignal)), uintptr(unsafe.Pointer(outMACDHist)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MacdFix(startIdx int, endIdx int, inReal *float64, optInSignalPeriod int, outBegIdx *int, outNBElement *int, outMACD *float64, outMACDSignal *float64, outMACDHist *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MacdFix.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInSignalPeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMACD)), uintptr(unsafe.Pointer(outMACDSignal)), uintptr(unsafe.Pointer(outMACDHist)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Mama(startIdx int, endIdx int, inReal *float64, optInFastLimit float64, optInSlowLimit float64, outBegIdx *int, outNBElement *int, outMAMA *float64, outFAMA *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Mama.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInFastLimit), uintptr(optInSlowLimit), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMAMA)), uintptr(unsafe.Pointer(outFAMA)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Mavp(startIdx int, endIdx int, inReal *float64, inPeriods *float64, optInMinPeriod int, optInMaxPeriod int, optInMAType int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_Mavp.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(inPeriods)), uintptr(optInMinPeriod), uintptr(optInMaxPeriod), uintptr(optInMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Max(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Max.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Max_Lookback(optInTimePeriod int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall(procZ_Max_Lookback.Addr(), 1, uintptr(optInTimePeriod), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MaxIndex(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MaxIndex.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MedPrice(startIdx int, endIdx int, inHigh *float64, inLow *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MedPrice.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Mfi(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, inVolume *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_Mfi.Addr(), 10, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(inVolume)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MidpoInt(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MidpoInt.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MidPrice(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MidPrice.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MIn(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MIn.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MInIndex(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outInteger *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MInIndex.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outInteger)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MInMax(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outMin *float64, outMax *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MInMax.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMin)), uintptr(unsafe.Pointer(outMax)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MInMaxIndex(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outMinIdx *int, outMaxIdx *int) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MInMaxIndex.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outMinIdx)), uintptr(unsafe.Pointer(outMaxIdx)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MInusDi(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MInusDi.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_MInusDm(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_MInusDm.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Mom(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Mom.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Mult(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Mult.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Natr(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Natr.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Obv(startIdx int, endIdx int, inReal *float64, inVolume *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Obv.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(inVolume)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_PlusDi(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_PlusDi.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_PlusDm(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_PlusDm.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Ppo(startIdx int, endIdx int, inReal *float64, optInFastPeriod int, optInSlowPeriod int, optInMAType int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Ppo.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInFastPeriod), uintptr(optInSlowPeriod), uintptr(optInMAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Roc(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Roc.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Rocp(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Rocp.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Rocr(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Rocr.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Rocr100(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Rocr100.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Rsi(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Rsi.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Sar(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInAcceleration float64, optInMaximum float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Sar.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInAcceleration), uintptr(optInMaximum), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_SarExt(startIdx int, endIdx int, inHigh *float64, inLow *float64, optInStartValue float64, optInOffsetOnReverse float64, optInAccelerationInitLong float64, optInAccelerationLong float64, optInAccelerationMaxLong float64, optInAccelerationInitShort float64, optInAccelerationShort float64, optInAccelerationMaxShort float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall15(procZ_SarExt.Addr(), 15, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(optInStartValue), uintptr(optInOffsetOnReverse), uintptr(optInAccelerationInitLong), uintptr(optInAccelerationLong), uintptr(optInAccelerationMaxLong), uintptr(optInAccelerationInitShort), uintptr(optInAccelerationShort), uintptr(optInAccelerationMaxShort), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_SIn(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_SIn.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_SInh(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_SInh.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Sma(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Sma.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Sqrt(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Sqrt.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_StdDev(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInNbDev float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_StdDev.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInNbDev), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Stoch(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInFastK_Period int, optInSlowK_Period int, optInSlowK_MAType int, optInSlowD_Period int, optInSlowD_MAType int, outBegIdx *int, outNBElement *int, outSlowK *float64, outSlowD *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall15(procZ_Stoch.Addr(), 14, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInFastK_Period), uintptr(optInSlowK_Period), uintptr(optInSlowK_MAType), uintptr(optInSlowD_Period), uintptr(optInSlowD_MAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outSlowK)), uintptr(unsafe.Pointer(outSlowD)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Stochf(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInFastK_Period int, optInFastD_Period int, optInFastD_MAType int, outBegIdx *int, outNBElement *int, outFastK *float64, outFastD *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_Stochf.Addr(), 12, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInFastK_Period), uintptr(optInFastD_Period), uintptr(optInFastD_MAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outFastK)), uintptr(unsafe.Pointer(outFastD)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_StochRsi(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInFastK_Period int, optInFastD_Period int, optInFastD_MAType int, outBegIdx *int, outNBElement *int, outFastK *float64, outFastD *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_StochRsi.Addr(), 11, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInFastK_Period), uintptr(optInFastD_Period), uintptr(optInFastD_MAType), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outFastK)), uintptr(unsafe.Pointer(outFastD)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Sub(startIdx int, endIdx int, inReal0 *float64, inReal1 *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Sub.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal0)), uintptr(unsafe.Pointer(inReal1)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Sum(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Sum.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_T3(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInVFactor float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_T3.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInVFactor), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Tan(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Tan.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Tanh(startIdx int, endIdx int, inReal *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall6(procZ_Tanh.Addr(), 6, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Tema(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Tema.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Trange(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Trange.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Trima(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Trima.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Trix(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Trix.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Tsf(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Tsf.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_TypPrice(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_TypPrice.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_UltOsc(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod1 int, optInTimePeriod2 int, optInTimePeriod3 int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall12(procZ_UltOsc.Addr(), 11, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod1), uintptr(optInTimePeriod2), uintptr(optInTimePeriod3), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Var(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, optInNbDev float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Var.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(optInNbDev), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_WclPrice(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_WclPrice.Addr(), 8, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Willr(startIdx int, endIdx int, inHigh *float64, inLow *float64, inClose *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Willr.Addr(), 9, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inHigh)), uintptr(unsafe.Pointer(inLow)), uintptr(unsafe.Pointer(inClose)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)))
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func ta_Wma(startIdx int, endIdx int, inReal *float64, optInTimePeriod int, outBegIdx *int, outNBElement *int, outReal *float64) (retCode int, err error) {
	r0, _, e1 := syscall.Syscall9(procZ_Wma.Addr(), 7, uintptr(startIdx), uintptr(endIdx), uintptr(unsafe.Pointer(inReal)), uintptr(optInTimePeriod), uintptr(unsafe.Pointer(outBegIdx)), uintptr(unsafe.Pointer(outNBElement)), uintptr(unsafe.Pointer(outReal)), 0, 0)
	retCode = int(r0)
	if retCode == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

